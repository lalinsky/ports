#!/bin/sh
#
# $FreeBSD: ports/www/uwsgi/files/uwsgi.in,v 1.2 2010/09/12 10:39:04 danger Exp $
#
# PROVIDE: uwsgi
# REQUIRE: DAEMON
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf to enable uwsgi:
#
# uwsgi_enable (bool):		Set it to "YES" to enable uwsgi
#				Default is "NO".
# uwsgi_socket (path/str):	Set the path to the uwsgi unix socket
#				Default is /tmp/uwsgi.sock.
# uwsgi_logfile (path):		Set the path to the uwsgi log file
#				Default is /var/log/uwsgi.log.
# uwsgi_pidfile (path):		Set the path to the uwsgi pid file
#				Default is /var/run/uwsgi.pid.
# uwsgi_uid (int):		Set the UID of the process to run with
#				Default is 80.
# uwsgi_gid (int):		Set the GID of the process to run with
#				Default is 80.
# uwsgi_flags (str):		Set the uwsgi command line arguments
#				Default is "-M -L".
#
# If you would like to have multiple uWSGI instances running, you can
# define multiple profiles:
#
# uwsgi_profiles (str):		Set the list of uwsgi profiles
#				Default is "".
#
# For each profile you can then define different options (except for
# uwsgi_enable) using the syntax uwsgi_<profile>_<option>

. /etc/rc.subr

name="uwsgi"
rcvar=`set_rcvar`

load_rc_config $name

: ${uwsgi_enable="NO"}
: ${uwsgi_profiles=""}
: ${uwsgi_socket="/tmp/${name}.sock"}
: ${uwsgi_logfile="/var/log/${name}.log"}
: ${uwsgi_pidfile="/var/run/${name}.pid"}
: ${uwsgi_uid="80"}
: ${uwsgi_gid="80"}
: ${uwsgi_flags="-M -L"}

is_uwsgi_profile() {
    local profile

    for profile in $uwsgi_profiles; do
        if [ "$profile" = "$1" ]; then
            return 0
        fi
    done

    return 1
}

if [ -n "${uwsgi_profiles}" ]; then
	if [ -n "$2" ]; then
		profile="$2"
		if ! is_uwsgi_profile $profile; then
			echo "$0: no such profile defined in uwsgi_profiles."
		        exit 1
		fi
		eval uwsgi_socket=\${uwsgi_${profile}_socket:-"/tmp/${name}-${profile}.sock"}
		eval uwsgi_logfile=\${uwsgi_${profile}_logfile:-"/var/log/${name}-${profile}.log"}
		eval uwsgi_pidfile=\${uwsgi_${profile}_pidfile:-"/var/run/${name}-${profile}.pid"}
		eval uwsgi_uid=\${uwsgi_${profile}_uid:-"${uwsgi_uid}"}
		eval uwsgi_gid=\${uwsgi_${profile}_gid:-"${uwsgi_uid}"}
		eval uwsgi_flags=\${uwsgi_${profile}_flags:-"${uwsgi_flags}"}
	elif [ -n "$1" ]; then
		for profile in ${uwsgi_profiles}; do
	            echo "Processing ${name} profile: ${profile}"
	            $0 $1 ${profile}
	        done
	        exit 0
	fi
fi

command=%%PREFIX%%/bin/uwsgi
command_args="--pidfile ${uwsgi_pidfile} -s ${uwsgi_socket} -d ${uwsgi_logfile} --uid ${uwsgi_uid} --gid ${uwsgi_gid} ${uwsgi_flags}"
pidfile=${uwsgi_pidfile}
stop_postcmd=stop_postcmd
reload_precmd=reload_precmd
brutalreload_cmd=brutalreload_cmd
sig_stop="INT"
extra_commands="reload brutalreload"

stop_postcmd()
{
	rm -f ${uwsgi_pidfile} ${uwsgi_socket}
}

reload_precmd()
{
	echo "Gracefully reloading ${name} without closing the main sockets."
}

brutalreload_cmd()
{
	echo "Reloading ${name} without closing the main sockets."

	reload_precmd=""
	sig_reload="TERM"
	run_rc_command ${rc_prefix}reload $rc_extra_args || return 1
}

run_rc_command "$1"
